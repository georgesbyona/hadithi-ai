import "package:flutter/material.dart";

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff8c4a5e),
      surfaceTint: Color(0xff8c4a5e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffffd9e1),
      onPrimaryContainer: Color(0xff703346),
      secondary: Color(0xff74565e),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffffd9e1),
      onSecondaryContainer: Color(0xff5b3f46),
      tertiary: Color(0xff7b5734),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffffdcc0),
      onTertiaryContainer: Color(0xff613f1f),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff93000a),
      surface: Color(0xfffff8f8),
      onSurface: Color(0xff22191b),
      onSurfaceVariant: Color(0xff514346),
      outline: Color(0xff847376),
      outlineVariant: Color(0xffd6c2c5),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff382e30),
      inversePrimary: Color(0xffffb1c5),
      primaryFixed: Color(0xffffd9e1),
      onPrimaryFixed: Color(0xff3a071b),
      primaryFixedDim: Color(0xffffb1c5),
      onPrimaryFixedVariant: Color(0xff703346),
      secondaryFixed: Color(0xffffd9e1),
      onSecondaryFixed: Color(0xff2b151b),
      secondaryFixedDim: Color(0xffe3bdc5),
      onSecondaryFixedVariant: Color(0xff5b3f46),
      tertiaryFixed: Color(0xffffdcc0),
      onTertiaryFixed: Color(0xff2d1600),
      tertiaryFixedDim: Color(0xffeebd92),
      onTertiaryFixedVariant: Color(0xff613f1f),
      surfaceDim: Color(0xffe6d6d8),
      surfaceBright: Color(0xfffff8f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffff0f2),
      surfaceContainer: Color(0xfffbeaec),
      surfaceContainerHigh: Color(0xfff5e4e6),
      surfaceContainerHighest: Color(0xffefdfe1),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff5c2236),
      surfaceTint: Color(0xff8c4a5e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff9e586c),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff492f36),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff84656c),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff4e2f10),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff8c6541),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff740006),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffcf2c27),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffff8f8),
      onSurface: Color(0xff170f11),
      onSurfaceVariant: Color(0xff403336),
      outline: Color(0xff5d4f52),
      outlineVariant: Color(0xff79696c),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff382e30),
      inversePrimary: Color(0xffffb1c5),
      primaryFixed: Color(0xff9e586c),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff814054),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff84656c),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff6a4d54),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff8c6541),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff714d2b),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffd2c3c5),
      surfaceBright: Color(0xfffff8f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffff0f2),
      surfaceContainer: Color(0xfff5e4e6),
      surfaceContainerHigh: Color(0xffe9d9db),
      surfaceContainerHighest: Color(0xffdeced0),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff4f182c),
      surfaceTint: Color(0xff8c4a5e),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff733548),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff3e252c),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff5d4249),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff422507),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff644221),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff600004),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff98000a),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffff8f8),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff000000),
      outline: Color(0xff35292c),
      outlineVariant: Color(0xff544649),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff382e30),
      inversePrimary: Color(0xffffb1c5),
      primaryFixed: Color(0xff733548),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff581f32),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff5d4249),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff452c32),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff644221),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff4a2c0c),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffc4b5b7),
      surfaceBright: Color(0xfffff8f8),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffeedef),
      surfaceContainer: Color(0xffefdfe1),
      surfaceContainerHigh: Color(0xffe1d1d3),
      surfaceContainerHighest: Color(0xffd2c3c5),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffffb1c5),
      surfaceTint: Color(0xffffb1c5),
      onPrimary: Color(0xff551d30),
      primaryContainer: Color(0xff703346),
      onPrimaryContainer: Color(0xffffd9e1),
      secondary: Color(0xffe3bdc5),
      onSecondary: Color(0xff422930),
      secondaryContainer: Color(0xff5b3f46),
      onSecondaryContainer: Color(0xffffd9e1),
      tertiary: Color(0xffeebd92),
      onTertiary: Color(0xff472a0a),
      tertiaryContainer: Color(0xff613f1f),
      onTertiaryContainer: Color(0xffffdcc0),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff191113),
      onSurface: Color(0xffefdfe1),
      onSurfaceVariant: Color(0xffd6c2c5),
      outline: Color(0xff9e8c90),
      outlineVariant: Color(0xff514346),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffefdfe1),
      inversePrimary: Color(0xff8c4a5e),
      primaryFixed: Color(0xffffd9e1),
      onPrimaryFixed: Color(0xff3a071b),
      primaryFixedDim: Color(0xffffb1c5),
      onPrimaryFixedVariant: Color(0xff703346),
      secondaryFixed: Color(0xffffd9e1),
      onSecondaryFixed: Color(0xff2b151b),
      secondaryFixedDim: Color(0xffe3bdc5),
      onSecondaryFixedVariant: Color(0xff5b3f46),
      tertiaryFixed: Color(0xffffdcc0),
      onTertiaryFixed: Color(0xff2d1600),
      tertiaryFixedDim: Color(0xffeebd92),
      onTertiaryFixedVariant: Color(0xff613f1f),
      surfaceDim: Color(0xff191113),
      surfaceBright: Color(0xff413739),
      surfaceContainerLowest: Color(0xff140c0e),
      surfaceContainerLow: Color(0xff22191b),
      surfaceContainer: Color(0xff261d1f),
      surfaceContainerHigh: Color(0xff31282a),
      surfaceContainerHighest: Color(0xff3c3234),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffffd0db),
      surfaceTint: Color(0xffffb1c5),
      onPrimary: Color(0xff471225),
      primaryContainer: Color(0xffc77a90),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffad2db),
      onSecondary: Color(0xff361f25),
      secondaryContainer: Color(0xffaa8890),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffffd4b0),
      onTertiary: Color(0xff3a1f02),
      tertiaryContainer: Color(0xffb38861),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffd2cc),
      onError: Color(0xff540003),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff191113),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffecd7db),
      outline: Color(0xffc0adb1),
      outlineVariant: Color(0xff9e8c8f),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffefdfe1),
      inversePrimary: Color(0xff723447),
      primaryFixed: Color(0xffffd9e1),
      onPrimaryFixed: Color(0xff2b0011),
      primaryFixedDim: Color(0xffffb1c5),
      onPrimaryFixedVariant: Color(0xff5c2236),
      secondaryFixed: Color(0xffffd9e1),
      onSecondaryFixed: Color(0xff1f0b11),
      secondaryFixedDim: Color(0xffe3bdc5),
      onSecondaryFixedVariant: Color(0xff492f36),
      tertiaryFixed: Color(0xffffdcc0),
      onTertiaryFixed: Color(0xff1e0d00),
      tertiaryFixedDim: Color(0xffeebd92),
      onTertiaryFixedVariant: Color(0xff4e2f10),
      surfaceDim: Color(0xff191113),
      surfaceBright: Color(0xff4c4244),
      surfaceContainerLowest: Color(0xff0c0607),
      surfaceContainerLow: Color(0xff241b1d),
      surfaceContainer: Color(0xff2f2627),
      surfaceContainerHigh: Color(0xff3a3032),
      surfaceContainerHighest: Color(0xff453b3d),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffffebee),
      surfaceTint: Color(0xffffb1c5),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffffabc1),
      onPrimaryContainer: Color(0xff21000b),
      secondary: Color(0xffffebee),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffdfb9c1),
      onSecondaryContainer: Color(0xff18060b),
      tertiary: Color(0xffffede0),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xffeab98f),
      onTertiaryContainer: Color(0xff160800),
      error: Color(0xffffece9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffaea4),
      onErrorContainer: Color(0xff220001),
      surface: Color(0xff191113),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffffffff),
      outline: Color(0xffffebee),
      outlineVariant: Color(0xffd2bec1),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffefdfe1),
      inversePrimary: Color(0xff723447),
      primaryFixed: Color(0xffffd9e1),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffffb1c5),
      onPrimaryFixedVariant: Color(0xff2b0011),
      secondaryFixed: Color(0xffffd9e1),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffe3bdc5),
      onSecondaryFixedVariant: Color(0xff1f0b11),
      tertiaryFixed: Color(0xffffdcc0),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffeebd92),
      onTertiaryFixedVariant: Color(0xff1e0d00),
      surfaceDim: Color(0xff191113),
      surfaceBright: Color(0xff584d4f),
      surfaceContainerLowest: Color(0xff000000),
      surfaceContainerLow: Color(0xff261d1f),
      surfaceContainer: Color(0xff382e30),
      surfaceContainerHigh: Color(0xff43393b),
      surfaceContainerHighest: Color(0xff4f4446),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
    useMaterial3: true,
    brightness: colorScheme.brightness,
    colorScheme: colorScheme,
    textTheme: textTheme.apply(
      bodyColor: colorScheme.onSurface,
      displayColor: colorScheme.onSurface,
    ),
    scaffoldBackgroundColor: colorScheme.surface,
    canvasColor: colorScheme.surfaceContainer,
    visualDensity: VisualDensity.adaptivePlatformDensity,
  );
}
